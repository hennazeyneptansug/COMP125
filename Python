#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Nov 29 21:28:00 2024

@author: hennazeyneptansug
"""

import random #Random 

def roll_two_dice(): #This function will generate two random integers for two dices
    die1=random.randint(1,6)
    die2=random.randint(1,6)
    return die1, die2


def get_lucky_number(): #This function should take the lucky number as input
    lucky_number=int(input("Enter your lucky number: "))
    while lucky_number<4 or lucky_number>12: #The range is in between 4 and 12
        lucky_number=int(input("Invalid lucky number, please enter again: ")) #If input is out of range ask again
    return lucky_number


def get_player_answer(): #This function should ask whether the player wants to keep continuing the game or not
    answer=input("Do you want to continue? ")
    if answer=="y" or answer=="Y": #Both "y" and "Y" mean the turn for that player should continue
        answer=True #Variable "answer" assigned as a boolean in order to work as a flag
    elif answer=="n" or answer=="N": #Both "n" and "N" mean the turn for that player should not continue
        answer=False
    else:
        while answer!="y" or answer!="Y" or answer!="n" or answer!="N":
            answer=input("Invalid answer, please try again: ") #Keep asking when the input is unwanted
            if answer=="y" or answer=="Y":
                answer=True
                break
            elif answer=="n" or answer=="N":
                answer=False
                break
    return answer
            

def one_roll(die1, die2, lucky_number): #This function control how each of the rules work
    if (die1==1 and die2!=1) or (die1!=1 and die2==1): #When only one die is equal to 1
        rule=1
    elif die1==1 and die2==1: #When both of the dices are equal to 1
        rule=2
    elif (die1!=1 or die2!=1) and die1+die2==lucky_number: #When there is no die equal to 1 and the sum is equal to the lucky number
        rule=3
    else: #Otherwise
        rule=4
    return rule


def one_turn(lucky_number, current_score):
    while True:
        die1, die2 = roll_two_dice()
        print(f"Dice rolled: {die1} and {die2}")
        rule=one_roll(die1, die2, lucky_number)

        if rule==3: #Check for rule 3 first and roll again automatically
            print(f'Rule {rule} applied')
            current_score*=2
        elif rule==2: #Zero the current score if rule 2 is assigned
            print(f'Rule {rule} applied')
            current_score=0
            break
        elif rule==1: #Stop when rule 1
            print(f'Rule {rule} applied')
            break
        elif rule==4: #Add the sum to the current score if rule 4
            print(f'Rule {rule} applied')
            current_score=current_score+(die1+die2)
            if not get_player_answer():
                current_score=current_score+(die1+die2)
                break

    return current_score


def play_pig(): #Main function
    current_score_1=0
    current_score_2=0
    while current_score_1<100 or current_score_2<100: #Loop should be working when the scores are less then zero
        print("Player 1 turn")
        lucky_number_1=get_lucky_number() #Start with the player 1's variables
        current_score_1=one_turn(lucky_number_1, current_score_1)
        print("--------------------------")
        print("Current scores")
        print(f'Player 1: {current_score_1}')
        print(f'Player 2: {current_score_2}')
        print("--------------------------")
        if current_score_1>=100:
            print("Player 1 wins")
            break #Stop and determine the winner when player 1's score is already above or equal to 100
        print("Player 2 turn")
        lucky_number_2=get_lucky_number() #Take the player 2's variable from the suitable functions
        current_score_2=one_turn(lucky_number_2, current_score_2)
        print("--------------------------")
        print("Current scores")
        print(f'Player 1: {current_score_1}')
        print(f'Player 2: {current_score_2}')
        print("--------------------------")
        if current_score_2>=100:
            print("Player 2 wins")
            break #Stop and determine the winner when player 1's score is already above or equal to 100
    
play_pig() #Call the main function otherwise nothing will work



